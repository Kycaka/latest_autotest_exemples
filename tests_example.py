import allure
import pytest


@allure.feature('Management Console')
@allure.story('Учетные записи')
@allure.tag('Management Console', 'Учетные записи', 'Acceptance')
class TestCreateAccount:

    @pytest.fixture()
    def precondition(self, web):
        with allure.step('Перейти на вкладку "Учетные записи"'):
            web.left_panel.go_to_accounts()
        with allure.step('Нажать на кнопку "Добавить"'):
            web.mc_roles_page.main_action_bar.add.click()

    @allure.title('Создание новой учетной записи для домена')
    @allure.id('9777')
    def test_create_account_in_domain(self, web, precondition):

        account_name = 'AutoGeneratedAccountForDomain'
        domain_name = 'PAM-AD1'

        with allure.step('Создание УЗ для домена'):
            web.mc_accounts_page.add_account.add_account_for_domain_or_resource(account_name=account_name,
                                                                                domain_name=domain_name)

        with allure.step('Проверка создания УЗ'):
            web.mc_accounts_page.choose_account(domain_name=domain_name, account_name=account_name)
            web.mc_accounts_page.edit_account.check_account(account_name=account_name, account_location=domain_name)

        with allure.step('Проверка удаления УЗ'):
            web.mc_accounts_page.check_account_is_removed(account_name=account_name)

        with allure.step('Проверка создания события'):
            web.left_panel.go_to_events()
            web.mc_events_page.check_event_is_created('1000')
            web.mc_events_page.check_event_is_created('1027')

    @allure.title('Создание новой учетной записи для ресурса')
    @allure.id('10339')
    def test_create_account_in_resource(self, web, precondition):

        account_name = 'AutoGeneratedAccountForResource'
        resource_name = 'RE-IPAMM-VM'

        with allure.step('Создание УЗ для ресурса'):
            web.mc_accounts_page.add_account.add_account_for_domain_or_resource(account_name=account_name,
                                                                                resource_name=resource_name)

        with allure.step('Проверка создания УЗ'):
            web.mc_accounts_page.choose_account(account_name=account_name, resource_name=resource_name)
            web.mc_accounts_page.edit_account.check_account(account_name=account_name, account_location=resource_name)

        with allure.step('Проверка удаления УЗ'):
            web.mc_accounts_page.check_account_is_removed(account_name=account_name)

        with allure.step('Проверка создания события'):
            web.left_panel.go_to_events()
            web.mc_events_page.check_event_is_created('1000')
            web.mc_events_page.check_event_is_created('1027')

    @allure.title('Проверка создания точки восстановления для учетной записи, после смены пароля')
    @allure.id('10260')
    def test_check_restore_point_created_after_password_change(self, web):

        account_name = 'RM-DEB-SSH.PAM-AD1.LOCAL\\autotester'
        account_is_placed_on_linux_resource = True
        password_reason_input = 'bober'
        password = 'New_password'

        with allure.step('Перейти на вкладку "Учетные записи"'):
            web.left_panel.go_to_accounts()
        with allure.step('Выбрать учетную запись из предварительного условия'):
            web.mc_accounts_page.choose_account(account_name=account_name)
            web.mc_accounts_page.make_account_manageable(
                account_is_placed_on_linux_resource=account_is_placed_on_linux_resource
            )
        with allure.step('Выбрать команду "Откатить" и запомнить количество точек восстановления'):
            web.mc_accounts_page.main_edit_page_bar.restore.click(wait_for_loader_off=True)
            restore_points_before = web.mc_accounts_page.add_account.count_restore_points_for_account()
        with allure.step('Закрыть диалоговое окно "Откатить"'):
            web.mc_accounts_page.add_account.close_cross.click(wait_for_loader_off=True)
        with allure.step('Выбрать команду "Сменить пароль"'):
            web.mc_accounts_page.main_edit_page_bar.change_password.click(wait_for_loader_off=True)
        with allure.step('Выбрать значение "Задать пароль вручную" и ввести корректные значения в поля \
                         "Пароль", "Подтверждение пароля" и "Причина смены пароля" -> "Сохранить"'):
            web.mc_accounts_page.edit_account.change_password(password_reason_input=password_reason_input,
                                                              password_manual=True,
                                                              password=password,
                                                              password_confirm=password
                                                              )
        with allure.step('Выбрать команду "Откатить"'):
            web.mc_accounts_page.main_edit_page_bar.restore.click(wait_for_loader_off=True)
            assert restore_points_before == web.mc_accounts_page.add_account.count_restore_points_for_account() - 1, \
                'Restore point is not created'
            web.mc_accounts_page.add_account.close_cross.click(wait_for_loader_off=True)

        with allure.step('Проверка создания события 1034 - "Пароль учетной записи успешно сброшен"'):
            web.left_panel.go_to_events()
            web.mc_events_page.check_event_is_created('1034')

    @pytest.mark.precommit
    @allure.title('Синхронизация с доменом')
    @allure.tag('2.10', 'Домены')
    @allure.id('10334')
    def test_sync_with_domain(self, web):

        account_name = 'PAM-AD1\\az'

        with allure.step('Перейти в раздел УЗ'):
            web.left_panel.go_to_accounts()
        with allure.step(f'Перейти на страницу УЗ - {account_name}'):
            web.mc_accounts_page.choose_account(account_name)
            web.mc_accounts_page.make_account_manageable()
        with allure.step('Открыть вкладку "Группы безопасности" на странице УЗ'):
            web.mc_accounts_page.edit_page_tabs_panel.choose_tab('Группы безопасности')
            security_groups_before = web.mc_accounts_page.accounts_table_all.transform_block_elements_into_text_list()
        with allure.step('Нажать кнопку "Синхронизировать"'):
            web.mc_accounts_page.main_edit_page_bar.sync_data.click(wait_for_loader_off=True)
        with allure.step('Подтвердить синхронизацию'):
            web.mc_accounts_page.add_account.next.click(wait_for_loader_off=True)
        with allure.step('Нажать "Закрыть"'):
            web.mc_accounts_page.add_account.close.click(wait_for_loader_off=True)

        assert not web.mc_accounts_page.accounts_table_all.transform_block_elements_into_text_list() == \
            security_groups_before, 'Security Groups were not changed'

    @allure.title('Смена устаревшего пароля у учетной записи')
    @allure.tag('2.10', 'Домены')
    @allure.id('10336')
    def test_change_outdated_password_for_account(self, web):

        account_name = 'PAM-AD1\\rak'
        incorrect_password = True
        password = 'New_password'
        password_reason_input = 'bober'

        with allure.step('Перейти в раздел УЗ'):
            web.left_panel.go_to_accounts()

        with allure.step(f'Перейти на страницу УЗ - {account_name}'):
            web.mc_accounts_page.choose_account(account_name)
            web.mc_accounts_page.make_account_manageable(set_password_manualy=incorrect_password)

        with allure.step('Нажать кнопку "Проверить"'):
            web.mc_accounts_page.main_edit_page_bar.check_data.click(wait_for_loader_off=True)
            web.mc_accounts_page.add_account.next.click(wait_for_loader_off=True)

        with allure.step('Проверка состояния пароля - "Пароль не правильный"'):
            assert 'Пароль не правильный' in web.mc_accounts_page.add_account.modal_window_td.\
                transform_block_elements_into_text_list(), 'Password state is incorrect'
            web.mc_accounts_page.add_account.close_cross.click(wait_for_loader_off=True)

        with allure.step('Нажать кнопку "Сменить пароль"'):
            web.mc_accounts_page.main_edit_page_bar.change_password.click(wait_for_loader_off=True)

        with allure.step('Выбрать значение "Задать пароль вручную" и ввести корректные значения в поля \
                         "Пароль", "Подтверждение пароля" и "Причина смены пароля" -> "Сохранить"'):
            web.mc_accounts_page.edit_account.change_password(password_reason_input=password_reason_input,
                                                              password_manual=True,
                                                              password=password,
                                                              password_confirm=password)

        with allure.step('Нажать кнопку "Проверить"'):
            web.mc_accounts_page.main_edit_page_bar.check_data.click(wait_for_loader_off=True)
            web.mc_accounts_page.add_account.next.click(wait_for_loader_off=True)

        with allure.step('Проверка состояния пароля - "Пароль верный"'):
            assert 'Пароль верный' in web.mc_accounts_page.add_account.modal_window_td.\
                transform_block_elements_into_text_list(), 'Password state is incorrect'